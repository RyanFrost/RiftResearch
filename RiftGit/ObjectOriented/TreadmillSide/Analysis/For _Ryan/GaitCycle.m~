classdef GaitCycle < dlnode
    properties
        cycleNum;
        startTime;
        indices;
        perturbType;
        lowNaNs;
        numNaNs;
        
        footPos;
        anglesRaw;
        angles;
        
    end
    

    methods
        function cyc = GaitCycle(cycleNumber,cycleStartTime,cycleIndices,perturbStatus,footPositions,anglesArray)
            
            cyc.startTime = cycleStartTime;
            cyc.cycleNum = cycleNumber;
            cyc.perturbType = perturbStatus;
            cyc.indices = cycleIndices;
            cyc.footPos = footPositions;
            cyc = cyc.loadRawAngles(anglesArray);
            cyc.numNaNs = max(diff(find([1,diff(anglesArray(:,1)'),1])));
            
            cutoffNaN = 2;
            
            if cyc.numNaNs < cutoffNaN
                cyc.lowNaNs = 1;
            else
                cyc.lowNaNs = 0;
            end
            
        end
        
        function getCycs(cyc,cycsBefore,cycsAfter)
            
            
        end
        
        
    end
    
    methods (Access = private)
        function cyc = loadRawAngles(cyc,anglesArray)
            cyc.anglesRaw.ankleL = anglesArray(:,3);
            cyc.anglesRaw.kneeL = anglesArray(:,2);
            cyc.anglesRaw.hipL = anglesArray(:,1);
            
            cyc.anglesRaw.ankleR = anglesArray(:,6);
            cyc.anglesRaw.kneeR = anglesArray(:,5);
            cyc.anglesRaw.hipR = anglesArray(:,4);
            
            cyc = cyc.upsampleAngles(anglesArray);
        end
        
        
        function cyc = upsampleAngles(cyc,anglesArray)
            
            xx = linspace(0,100,1000);
             
            
            x = 100*(cyc.indices - min(cyc.indices)) / ( max(cyc.indices) - min(cyc.indices) );
            
            anglesUpsampled = spline(x,anglesArray',xx);
            
            
            cyc.angles.ankleL = anglesUpsampled(3,:);
            cyc.angles.kneeL = anglesUpsampled(2,:);
            cyc.angles.hipL = anglesUpsampled(1,:);
            cyc.angles.ankleR = anglesUpsampled(6,:);
            cyc.angles.kneeR = anglesUpsampled(5,:);
            cyc.angles.hipR = anglesUpsampled(4,:);
            
%             
%             cyc.angles.ankleL = spline(1:length(cyc.anglesRaw.ankleL),cyc.anglesRaw.ankleL,xx);
%             cyc.angles.kneeL = spline(1:length(cyc.anglesRaw.kneeL),cyc.anglesRaw.kneeL,xx);
%             cyc.angles.hipL = spline(1:length(cyc.anglesRaw.hipL),cyc.anglesRaw.hipL,xx);
%             cyc.angles.ankleR = spline(1:length(cyc.anglesRaw.ankleR),cyc.anglesRaw.ankleR,xx);
%             cyc.angles.kneeR = spline(1:length(cyc.anglesRaw.kneeR),cyc.anglesRaw.kneeR,xx);
%             cyc.angles.hipR = spline(1:length(cyc.anglesRaw.hipR),cyc.anglesRaw.hipR,xx);

            
        end
        
    end

end